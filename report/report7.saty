@import: ./coins.satyh/coins-report
@require: enumitem/enumitem

document(|
  author = {中野 将生};
  department = {情報科};
  faculty = {情報};
  id = 2013553;
  title = {関数プログラミング 7-2};
  en = false;
|) '<
  +section ?* ?* ?:((7,2)) {静的束縛と動的束縛} <
    +subsection { 型検査の動作の確認} <
      +p{
        `if`において`then`節の型と`else`節の型が食い違った際にエラーとなっている。
      }
      +code(```
        # S8.K7top.typecheck_string "if true then 1 else 2";;
        - : S8.K7ast.ty_t = S8.K7ast.TInt
        # S8.K7top.typecheck_string "1+2*3";;
        - : S8.K7ast.ty_t = S8.K7ast.TInt
        # S8.K7top.typecheck_string "true || false";;
        - : S8.K7ast.ty_t = S8.K7ast.TBool
        # S8.K7top.typecheck_string "if true then 1 else true";;
        Exception: (Failure "type of then and typeof else are unmatched")
        Called from unknown location
        # S8.K7top.typecheck_string "if true then false else true";;
        - : S8.K7ast.ty_t = S8.K7ast.TBool
      ```);
    >
    +subsection { 型検査の拡張 } <
      +p{
      }
      +code(```
        # S8.K7top.typecheck_string "false = 1";;
        Exception: (Failure "type error in Eq")
        Called from unknown location
        # S8.K7top.typecheck_string "1 = true";;
        Exception: (Failure "type error in Eq")
        Called from unknown location
        # S8.K7top.typecheck_string "1 = 1";;
        - : S8.K7ast.ty_t = S8.K7ast.TBool
        # S8.K7top.typecheck_string "true = false";;
        - : S8.K7ast.ty_t = S8.K7ast.TBool
        # S8.K7top.typecheck_string "1 > 2";;
        - : S8.K7ast.ty_t = S8.K7ast.TBool
        # S8.K7top.typecheck_string "1 <> 2";;
        - : S8.K7ast.ty_t = S8.K7ast.TBool
        # S8.K7top.typecheck_string "1 <> true";;
        Exception: (Failure "type error in Neq")
        Called from unknown location
      ```);
    >
  >
  +section {変数の型付けを含む型検査} <
    +p{
      `if x then x else 100`は`x`がどのような型であれ型エラーとなる。
    }
    +code(```
      # tcheck [("x", TInt); ("y", TInt)] @@ parse_repl_string "if true then x else 100";;
      - : ty_t = TInt
      # tcheck [("x", TBool); ("y", TInt)] @@ parse_repl_string "if true then x else 100";;
      Exception: (Failure "type of then and typeof else are unmatched")
      Called from unknown location
      # tcheck [("z", TInt); ("y", TInt)] @@ parse_repl_string "if true then x else 100";;
      Exception: (Failure "unbound variable: x")
      Called from unknown location
      Called from unknown location
      # tcheck [("x", TInt)] @@ parse_repl_string "if x then x else 100";;
      Exception: (Failure "if condition only take boolean type")
      Called from unknown location
      # tcheck [("x", TBool)] @@ parse_repl_string "if x then x else 100";;
      Exception: (Failure "type of then and typeof else are unmatched")
      Called from unknown location
    ```);
    +p{
      また`let`を用いて型環境を拡張できるようにした。
    }
    +code(```
      # typecheck_string "let x = true in let y = 1 in if x then y else 100";;
      - : S8.K7ast.ty_t = S8.K7ast.TInt
    ```);
  >
>
